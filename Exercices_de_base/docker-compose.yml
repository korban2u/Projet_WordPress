  version: '3.8'

  services:
    # Base de donn√©es MariaDB
    db:

      image: mariadb:10.9
      environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}

      container_name: wordpress_db
      restart: unless-stopped
      volumes:
        - ./volumes/mariadb:/var/lib/mysql
        - ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
      networks:
        - wordpress_network
      mem_limit: 512m
      cpus: 0.5
    # Cache Redis
    redis:
      image: redis:7-alpine
      container_name: wordpress_redis
      restart: unless-stopped
      command: redis-server --appendonly yes
      volumes:
        - ./volumes/redis:/data
      networks:
        - wordpress_network

    # WordPress
    wordpress:
      ports:
        - "${WORDPRESS_PORT}:80"
      build: ./wordpress
      container_name: wordpress_app
      restart: unless-stopped
      environment:
        WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
        WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
        WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
        WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      volumes:
        - ./volumes/wordpress:/var/www/html
      depends_on:
        - db
        - redis
      networks:
        - wordpress_network

    # phpMyAdmin (optionnel)
    phpmyadmin:
      image: phpmyadmin/phpmyadmin
      container_name: wordpress_phpmyadmin
      restart: unless-stopped
      ports:
        - "8081:80"
      environment:
        PMA_HOST: db
        PMA_PORT: 3306
        MYSQL_ROOT_PASSWORD: root_password
      depends_on:
        - db
      networks:
        - wordpress_network

  networks:
    wordpress_network:
      driver: bridge

  volumes:
    wordpress_data:
    mariadb_data:
    redis_data:

